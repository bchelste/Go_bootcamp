/*
 * Candy Server
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

 package main

import (
	"net/http"
	"encoding/json"
	"fmt"
	"strconv"
)

func returnResponse400(w http.ResponseWriter, message string) {
	w.WriteHeader(http.StatusBadRequest)
	var response InlineResponse400
	response.Error_ = message
	output, err := json.MarshalIndent(response, "", "    ")
	if err != nil {
		fmt.Println("Error MarshalIndent:", err)
	}
	fmt.Fprintf(w, string(output))
}

func returnResponse402(w http.ResponseWriter, message string) {
	w.WriteHeader(402)
	var response InlineResponse402
	response.Error_ = message
	output, err := json.MarshalIndent(response, "", "    ")
	if err != nil {
		fmt.Println("Error MarshalIndent:", err)
	}
	fmt.Fprintf(w, string(output))
}

func returnResponse201(w http.ResponseWriter, message string, amount int32) {
	w.WriteHeader(201)
	var response InlineResponse201
	response.Thanks = message
	response.Change = amount
	output, err := json.MarshalIndent(response, "", "    ")
	if err != nil {
		fmt.Println("Error MarshalIndent:", err)
	}
	fmt.Fprintf(w, string(output))
}

func BuyCandy(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")

	decoder := json.NewDecoder(r.Body)
	var currentOrder Order

	err := decoder.Decode(&currentOrder)
	if (err != nil) {
		returnResponse400(w, "non-valid fields types")
		return
	}

	fmt.Println(currentOrder)

	currentCandy, res := fetchCandy(currentOrder.CandyType)
	if (!res) {
		returnResponse400(w, "candy type " + currentOrder.CandyType + " not found")
	} else if (currentOrder.Money <= 0) {
		returnResponse400(w, "money: " + strconv.Itoa(int(currentOrder.Money)) + " <= 0")
	} else if (currentOrder.CandyCount <= 0) {
		returnResponse400(w, "candy count: " + strconv.Itoa(int(currentOrder.CandyCount)) + " <= 0")
	} else {
		amount := currentOrder.Money - (currentCandy.Value * currentOrder.CandyCount)
		if (amount < 0) {
			returnResponse402(w, "You need " + strconv.Itoa(int(amount * (-1))) + " more money!")
			return
		}
		returnResponse201(w, "Thank you!", amount)
	}
}
